# utils::install.packages("limma")
# install.packages("factoextra")
# install.packages("limma")
# install.packages("Rtsne")
# install.packages("umap")
# install.packages("RColorBrewer")
library(data.table)
library(readxl)
library(dplyr)
library(limma)
# Read the excel file
ex_mi_data <- read_excel("exercise_mi_imputed.xlsx")
#View(ex_mi_data)
ex_mi_data <- ex_mi_data %>%
mutate(log2_fc = log2(foldchange))
#View(ex_mi_data)
# Filter data to include only significant datapoints
p_value_threshold <- 0.05
fc_threshold <- 1.5
log_fc_thres <- log2(1.5)
# Filter data to include only significant data points
sig_foldchange_ex_mi_mice <- subset(ex_mi_data, `p-value` <= p_value_threshold) # p<0.05
significant_data_ex_mi_mice <- subset(ex_mi_data, `p-value` <= p_value_threshold & abs(log2_fc) >= log_fc_thres) # fc>1.5 and pvalue<0.05
#View(significant_data)
volcano_plot_ex_mi_mice <- ggplot(ex_mi_data, aes(x = log2_fc, y = -log10(`p-value`)))+
geom_point(color = ifelse(ex_mi_data$log2_fc <= -log_fc_thres & ex_mi_data$`p-value` <= p_value_threshold, "blue",
ifelse(ex_mi_data$log2_fc >= log_fc_thres & ex_mi_data$`p-value` <= p_value_threshold, "red",
"darkgray")), alpha = 0.5)+
geom_hline(yintercept = -log10(p_value_threshold), linetype = "dashed", color = "gray")+
geom_vline(xintercept = log_fc_thres, linetype = "dashed", color = "gray")+
geom_vline(xintercept = log2(1/1.5), linetype = "dashed", color = "gray")+
labs(x = "log2(Fold Change)", y = "-log10(p-value)")+
#title = "Mouse Exercise vs MI",
#subtitle = "FC \U2265 1.5, p \U2264 0.05")+
theme_minimal()+
geom_text(data = significant_data_ex_mi_mice,
aes(x = log2_fc, y = -log10(`p-value`),
label = Gene),
hjust = -0.2, vjust = 0.5, size = 2.5, color="black")+
theme_bw()+
theme(panel.grid = element_blank())
library(ggplot2)
library(gplots)
# Read the excel file
ex_mi_data <- read_excel("exercise_mi_imputed.xlsx")
#View(ex_mi_data)
ex_mi_data <- ex_mi_data %>%
mutate(log2_fc = log2(foldchange))
#View(ex_mi_data)
# Filter data to include only significant datapoints
p_value_threshold <- 0.05
fc_threshold <- 1.5
log_fc_thres <- log2(1.5)
# Filter data to include only significant data points
sig_foldchange_ex_mi_mice <- subset(ex_mi_data, `p-value` <= p_value_threshold) # p<0.05
significant_data_ex_mi_mice <- subset(ex_mi_data, `p-value` <= p_value_threshold & abs(log2_fc) >= log_fc_thres) # fc>1.5 and pvalue<0.05
#View(significant_data)
volcano_plot_ex_mi_mice <- ggplot(ex_mi_data, aes(x = log2_fc, y = -log10(`p-value`)))+
geom_point(color = ifelse(ex_mi_data$log2_fc <= -log_fc_thres & ex_mi_data$`p-value` <= p_value_threshold, "blue",
ifelse(ex_mi_data$log2_fc >= log_fc_thres & ex_mi_data$`p-value` <= p_value_threshold, "red",
"darkgray")), alpha = 0.5)+
geom_hline(yintercept = -log10(p_value_threshold), linetype = "dashed", color = "gray")+
geom_vline(xintercept = log_fc_thres, linetype = "dashed", color = "gray")+
geom_vline(xintercept = log2(1/1.5), linetype = "dashed", color = "gray")+
labs(x = "log2(Fold Change)", y = "-log10(p-value)")+
#title = "Mouse Exercise vs MI",
#subtitle = "FC \U2265 1.5, p \U2264 0.05")+
theme_minimal()+
geom_text(data = significant_data_ex_mi_mice,
aes(x = log2_fc, y = -log10(`p-value`),
label = Gene),
hjust = -0.2, vjust = 0.5, size = 2.5, color="black")+
theme_bw()+
theme(panel.grid = element_blank())
print(volcano_plot_ex_mi_mice)
# utils::install.packages("limma")
# install.packages("factoextra")
# install.packages("limma")
# install.packages("Rtsne")
# install.packages("umap")
# install.packages("RColorBrewer")
library(data.table)
library(readxl)
library(dplyr)
library(limma)
# utils::install.packages("limma")
# install.packages("factoextra")
# install.packages("limma")
# install.packages("Rtsne")
# install.packages("umap")
# install.packages("RColorBrewer")
library(data.table)
library(readxl)
library(dplyr)
# library(limma)
library(ggplot2)
library(gplots)
library(factoextra)
library(Rtsne)
library(umap)
library(RColorBrewer)
# utils::install.packages("limma")
# install.packages("factoextra")
# install.packages("limma")
# install.packages("Rtsne")
# install.packages("umap")
# install.packages("RColorBrewer")
library(data.table)
library(readxl)
library(dplyr)
# library(limma)
library(ggplot2)
library(gplots)
library(factoextra)
library(Rtsne)
library(umap)
library(RColorBrewer)
# Read the excel file
ex_mi_data <- read_excel("exercise_mi_imputed.xlsx")
#View(ex_mi_data)
ex_mi_data <- ex_mi_data %>%
mutate(log2_fc = log2(foldchange))
#View(ex_mi_data)
# Filter data to include only significant datapoints
p_value_threshold <- 0.05
fc_threshold <- 1.5
log_fc_thres <- log2(1.5)
# Filter data to include only significant data points
sig_foldchange_ex_mi_mice <- subset(ex_mi_data, `p-value` <= p_value_threshold) # p<0.05
significant_data_ex_mi_mice <- subset(ex_mi_data, `p-value` <= p_value_threshold & abs(log2_fc) >= log_fc_thres) # fc>1.5 and pvalue<0.05
#View(significant_data)
volcano_plot_ex_mi_mice <- ggplot(ex_mi_data, aes(x = log2_fc, y = -log10(`p-value`)))+
geom_point(color = ifelse(ex_mi_data$log2_fc <= -log_fc_thres & ex_mi_data$`p-value` <= p_value_threshold, "blue",
ifelse(ex_mi_data$log2_fc >= log_fc_thres & ex_mi_data$`p-value` <= p_value_threshold, "red",
"darkgray")), alpha = 0.5)+
geom_hline(yintercept = -log10(p_value_threshold), linetype = "dashed", color = "gray")+
geom_vline(xintercept = log_fc_thres, linetype = "dashed", color = "gray")+
geom_vline(xintercept = log2(1/1.5), linetype = "dashed", color = "gray")+
labs(x = "log2(Fold Change)", y = "-log10(p-value)")+
#title = "Mouse Exercise vs MI",
#subtitle = "FC \U2265 1.5, p \U2264 0.05")+
theme_minimal()+
geom_text(data = significant_data_ex_mi_mice,
aes(x = log2_fc, y = -log10(`p-value`),
label = Gene),
hjust = -0.2, vjust = 0.5, size = 2.5, color="black")+
theme_bw()+
theme(panel.grid = element_blank())
print(volcano_plot_ex_mi_mice)
# Remove any rows with missing values (if necessary)
ex_mi_data_clean <- na.omit(ex_mi_data) # omit rows that have no reads in at least one col
# View(ex_mi_data_clean)
# Extract the expression values (excluding any non-sample columns)
expression_matrix_ex_mi <- as.matrix(ex_mi_data_clean[, c(4:10)])
# Set row names of the expression matrix to gene names
# rownames(expression_matrix) <- ex_mi_data_clean$Gene
# Rename the column samples
colnames(expression_matrix_ex_mi) <- c("Exe","Exe","Exe","Exe",
"MI","MI","MI")
# Heatmap with no col and row groupings
heatmap(expression_matrix_ex_mi, Colv = NA, Rowv =NA, scale = "row",
col = colorRampPalette(c("green", "black", "red"))(100),
xlab = "Samples", ylab = "Proteins", main = "Heatmap of All Mouse",
width = 10, height = 20, ces.axis = 0.7)
# Heatmap with row groupings
heatmap(expression_matrix_ex_mi, Colv = NA, scale = "row",
col = colorRampPalette(c("green", "black", "red"))(100),
xlab = "Samples", ylab = "Proteins", main = "Heatmap of All Mouse",
width = 10, height = 20, ces.axis = 0.7)
# Heatmap with col and row groupings
heatmap(expression_matrix_ex_mi, scale = "row",
col = colorRampPalette(c("green", "black", "red"))(100),
xlab = "Samples", ylab = "Proteins", main = "Heatmap of All Mouse",
width = 10, height = 20, ces.axis = 0.7)
#install.packages("forcats")
library(readxl)
library(dplyr)
library(limma)
#install.packages("forcats")
library(readxl)
library(dplyr)
library(limma)
#install.packages("forcats")
library(readxl)
library(dplyr)
#library(limma)
library(ggplot2)
library(forcats)
# Import excel file(s)
kegg_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.KEGG.xlsx")
#View(kegg_ex_mi)
rctm_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.RCTM.xlsx")
#View(rctm_ex_mi)
bp_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.Process.xlsx")
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
ggplot(kegg_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`enrichment score`, size=`genes mapped`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Enrichment Score", size="Proteins", title = "KEGG Analysis") +
theme_bw()
# Import excel file(s)
kegg_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.KEGG.xlsx")
#View(kegg_ex_mi)
rctm_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.RCTM.xlsx")
#View(rctm_ex_mi)
bp_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.Process.xlsx")
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
ggplot(kegg_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`genes mapped`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
# Import excel file(s)
kegg_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.KEGG.xlsx")
#View(kegg_ex_mi)
rctm_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.RCTM.xlsx")
#View(rctm_ex_mi)
bp_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.Process.xlsx")
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
ggplot(kegg_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
# Reactome
ggplot(rctm_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Reactome Analysis") +
theme_bw()
# Biological Process
ggplot(bp_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Biological Process Analysis") +
theme_bw()
# Import excel file(s)
kegg_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.KEGG.xlsx")
kegg_ex_mi <- kegg_ex_mi[1:20,]
#View(kegg_ex_mi)
rctm_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.RCTM.xlsx")
#View(rctm_ex_mi)
bp_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/pig_exercise_pval/enrichment.Process.xlsx")
bp_ex_mi <- bp_ex_mi[1:20,]
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
ggplot(kegg_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
# Reactome
ggplot(rctm_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Reactome Analysis") +
theme_bw()
# Biological Process
ggplot(bp_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Biological Process Analysis") +
theme_bw()
ggplot(kegg_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
ggplot(rctm_ex_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Reactome Analysis") +
theme_bw()
# Import excel file(s)
#kegg_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_exercise_pval/enrichment.KEGG.xlsx")
#View(kegg_ex_mi)
rctm_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_exercise_pval/enrichment.RCTM.xlsx")
# rctm_ex_mi <- rctm_ex_mi[1:20,]
#View(rctm_ex_mi)
bp_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_exercise_pval/enrichment.Process.xlsx")
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
# ggplot(kegg_ex_mi, aes(x=kegg_ex_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(kegg_ex_mi$`term description`)))) +
#   geom_point(aes(color=kegg_ex_mi$`enrichment score`, size=kegg_ex_mi$`genes mapped`)) +
#   scale_color_gradient(low = "red", high = "blue") +
#   labs(x="-log10(FDR)", y=NULL, color="Enrichment Score", size="Proteins", title = "KEGG Analysis") +
#   theme_bw()
# Reactome
ggplot(rctm_ex_mi, aes(x=rctm_ex_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(rctm_ex_mi$`term description`)))) +
geom_point(aes(color=rctm_ex_mi$`strength`, size=rctm_ex_mi$`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Reactome Analysis") +
theme_bw()
# Biological Process
ggplot(bp_ex_mi, aes(x=bp_ex_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(bp_ex_mi$`term description`)))) +
geom_point(aes(color=bp_ex_mi$`strength`, size=bp_ex_mi$`observed gene count`)) +
#, shape = bp_ex_mi$direction)) +
#scale_shape_manual(name="Direction", values = c(23,24,25)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Biological Process Analysis") +
theme_bw()
# Import excel file(s)
#kegg_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_exercise_pval/enrichment.KEGG.xlsx")
#View(kegg_ex_mi)
rctm_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_exercise_pval/enrichment.RCTM.xlsx")
# rctm_ex_mi <- rctm_ex_mi[1:20,]
#View(rctm_ex_mi)
bp_ex_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_exercise_pval/enrichment.Process.xlsx")
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
# ggplot(kegg_ex_mi, aes(x=kegg_ex_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(kegg_ex_mi$`term description`)))) +
#   geom_point(aes(color=kegg_ex_mi$`enrichment score`, size=kegg_ex_mi$`genes mapped`)) +
#   scale_color_gradient(low = "red", high = "blue") +
#   labs(x="-log10(FDR)", y=NULL, color="Enrichment Score", size="Proteins", title = "KEGG Analysis") +
#   theme_bw()
# Reactome
ggplot(rctm_ex_mi, aes(x=rctm_ex_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(rctm_ex_mi$`term description`)))) +
geom_point(aes(color=rctm_ex_mi$`strength`, size=rctm_ex_mi$`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Reactome Analysis") +
theme_bw()
# Biological Process
ggplot(bp_ex_mi, aes(x=bp_ex_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(bp_ex_mi$`term description`)))) +
geom_point(aes(color=bp_ex_mi$`strength`, size=bp_ex_mi$`observed gene count`)) +
#, shape = bp_ex_mi$direction)) +
#scale_shape_manual(name="Direction", values = c(23,24,25)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Biological Process Analysis") +
theme_bw()
# Import excel file(s)
kegg_fet_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_fetal_pval/enrichment.KEGG.xlsx")
#View(kegg_ex_mi)
rctm_fet_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_fetal_pval/enrichment.RCTM.xlsx")
# rctm_ex_mi <- rctm_ex_mi[1:20,]
#View(rctm_ex_mi)
bp_fet_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_fetal_pval/enrichment.Process.xlsx")
bp_fet_mi <- bp_fet_mi[1:20,]
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
ggplot(kegg_fet_mi, aes(x=kegg_fet_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(kegg_fet_mi$`term description`)))) +
geom_point(aes(color=kegg_fet_mi$`strength`, size=kegg_fet_mi$`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
# Reactome
ggplot(rctm_fet_mi, aes(x=rctm_fet_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(rctm_fet_mi$`term description`)))) +
geom_point(aes(color=rctm_fet_mi$`strength`, size=rctm_fet_mi$`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Reactome Analysis") +
theme_bw()
# Biological Process
ggplot(bp_fet_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
#, shape = bp_fet_mi$direction)) +
#scale_shape_manual(name="Direction", values = c(23,24,25)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Biological Process Analysis") +
theme_bw()
ggplot(kegg_fet_mi, aes(x=kegg_fet_mi$`-log10(fdr)`, y=fct_rev(fct_inorder(kegg_fet_mi$`term description`)))) +
geom_point(aes(color=kegg_fet_mi$`strength`, size=kegg_fet_mi$`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
# Import excel file(s)
kegg_fet_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_fetal_pval/enrichment.KEGG.xlsx")
#View(kegg_ex_mi)
rctm_fet_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_fetal_pval/enrichment.RCTM.xlsx")
# rctm_ex_mi <- rctm_ex_mi[1:20,]
#View(rctm_ex_mi)
bp_fet_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_unique_fetal_pval/enrichment.Process.xlsx")
bp_fet_mi <- bp_fet_mi[1:20,]
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
ggplot(kegg_fet_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
# Reactome
ggplot(rctm_fet_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Reactome Analysis") +
theme_bw()
# Biological Process
ggplot(bp_fet_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
#, shape = bp_fet_mi$direction)) +
#scale_shape_manual(name="Direction", values = c(23,24,25)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Biological Process Analysis") +
theme_bw()
# Import excel file(s)
kegg_sed_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_sedentary_pval/enrichment.KEGG.xlsx")
#View(kegg_ex_mi)
rctm_sed_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_sedentary_pval/enrichment.RCTM.xlsx")
# rctm_ex_mi <- rctm_ex_mi[1:20,]
#View(rctm_ex_mi)
bp_sed_mi <- read_excel("Workbooks for Paper/pvalue filter/mouse_sedentary_pval/enrichment.Process.xlsx")
bp_sed_mi <- bp_sed_mi[1:20,]
#View(bp_ex_mi)
# Dotplot of Enrichment Pathways
# KEGG
ggplot(kegg_sed_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
# Reactome
ggplot(rctm_sed_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Reactome Analysis") +
theme_bw()
# Biological Process
ggplot(bp_sed_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
#, shape = bp_fet_mi$direction)) +
#scale_shape_manual(name="Direction", values = c(23,24,25)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "Biological Process Analysis") +
theme_bw()
ggplot(kegg_sed_mi, aes(x=`-log10(fdr)`, y=fct_rev(fct_inorder(`term description`)))) +
geom_point(aes(color=`strength`, size=`observed gene count`)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x="-log10(FDR)", y=NULL, color="Strength", size="Proteins", title = "KEGG Analysis") +
theme_bw()
getwd()
setwd("D:/Coding/snai1_rnaseq")
# Load libraries
library(ggplot2)
if(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library(DESeq2)
# Load libraries
library(ggplot2)
# Download raw counts
counts <- read.delim("E-MTAB-5244-raw-counts.tsv")
head(counts)
# Download metadata
metadata <- read.delim("E-MTAB-5244-experiment-design.tsv")
head(metadata)
rownames(counts) <- counts$Gene.ID
head(counts)
# Remove unused columns (gene ID and gene name)
genes = counts[, c("Gene.ID", "Gene.Name")]
counts = counts[, -c(1,2)]
head(counts)
# Change row names in metadata to sample IDs
rownames(metadata) <- metadata$Run
head(metadata)
# Only keep columns of interest (genotype wildtype vs knockout )
metadata <- metadata[, c("Sample.Characteristic.genotype."), drop=FALSE]
colnames(metadata) <- c("genotype")
metadata
# Remove spaces in names to avoid DESeq warnings
metadata$genotype[metadata$genotype == "wild type genotype"] = 'wildtype'
metadata$genotype[metadata$genotype == "Snai1 knockout"] = 'knockout'
# Turn genotype into a factor
metadata$genotype <- factor(metadata$genotype, levels = c("wildtype", "knockout")) # wildtype is the baseline (place 1st)
metadata
# Verify that SNAI1 is indeed knocked out
gene_id <- genes$Gene.ID[genes$Gene.Name == 'SNAI1']
gene_counts <- counts[gene_id, ]
gene_counts
# Combine the metadata column to see if the knockout samples are the ones with low expression
gene_data <- cbind(metadata, counts=as.numeric(gene_counts))
gene_data
# Visualize SNAI1 expression for wildtype vs knockout
ggplot(gene_data, aes(x = genotype, y = counts, fill = genotype)) + geom_boxplot()
dds <- DESeqDataSetFromMatrix(countData = counts, colData = metadata, design = ~genotype)
View(dds)
str(dds)
dds <- dds[rowSums(counts(dds)) > 10, ]
dds <- DESeq(dds)
res <- results(dds, contrast = c("genotype", "knockout", "wildtype"), alpha = 1e-5)
res
# Merge gene name into data frame so can compare using gene name
res_df <- as.data.frame(res)
head(res_df)
res_df <- merge(res_df, genes, by = 'row.names')
head(res_df)
genes_to_check <- c("THY1", "PASD1")
res_df[res_df$Gene.Name %in% genes_to_check, ]
plotMA(res)
# Load libraries
library(ggplot2)
library(EnhancedVolcano)
BiocManager::install("biomaRt")
BiocManager::install("EnhancedVolcano")
# Load libraries
library(ggplot2)
library(EnhancedVolcano)
library(biomaRt)
# Load libraries
library(ggplot2)
library(EnhancedVolcano)
library(biomaRt)
EnhancedVolcano(res, lab=rownames(res), x = "log2FoldChange", y =  "pvalue")
EnhancedVolcano(res, lab=rownames(res), x = "log2FoldChange", y =  "pvalue")
